# -*- coding: utf-8 -*-
"""
/***************************************************************************
 geomAttributeDialog
                                 A QGIS plugin
 An attribute table with geometry descriptions
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-09-14
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Philip Whitten
        email                : philipwhitten@wollondilly.nsw.gov.au
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from os import path as osPath
from sys import path as sysPath
from PyQt5 import uic
from PyQt5 import QtWidgets
from PyQt5.QtCore import QFile, QUrl, QTemporaryFile, QIODevice
from PyQt5.QtGui import QDesktopServices
from qgis.gui import QgsAttributeTableView as geomTableView


sysPath.append(osPath.dirname(__file__))
FORM_CLASS, _ = uic.loadUiType(osPath.join(
    osPath.dirname(__file__), 'geomAttribute_window_base.ui'), resource_suffix='')

class geomAttributeWindow(QtWidgets.QMainWindow, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(geomAttributeWindow, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

    def helpScreen(self):
        resource_path = ":/plugins/geomAttribute/help/build/html/index.html"

        resource_file = QFile(resource_path)
        if resource_file.open(QIODevice.ReadOnly):
            tmp_file = QTemporaryFile(self)
            tmp_file.setFileTemplate("XXXXXX.html")
            if tmp_file.open():
                tmp_file.write(resource_file.readAll())
                resource_file.close()
                tmp_file.flush()
            url = QUrl.fromLocalFile(tmp_file.fileName())
            if QDesktopServices.openUrl(url):
                return
        QtWidgets.QMessageBox.warning(None, 'Warning', 'Unable to locate help file')



